Python 3.7.0 (default, Jun 28 2018, 08:04:48) [MSC v.1912 64 bit (AMD64)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> 
======= RESTART: C:\Users\Ryan\Documents\AdvLab\Round 3\slice_tools.py =======
>>> plt.hist(energy)
(array([5475., 2771., 2073., 1845., 1683., 1637., 1147., 3393., 6534.,
        952.]), array([ 0.50017 ,  1.649853,  2.799536,  3.949219,  5.098902,  6.248585,
        7.398268,  8.547951,  9.697634, 10.847317, 11.997   ]), <a list of 10 Patch objects>)
>>> plt.show()
>>> plot_slices(time)
Traceback (most recent call last):
  File "<pyshell#2>", line 1, in <module>
    plot_slices(time)
  File "C:\Users\Ryan\Documents\AdvLab\Round 3\slice_tools.py", line 42, in plot_slices
    plt.hist(i, bins=bins, label=lb)
  File "C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\pyplot.py", line 3137, in hist
    stacked=stacked, normed=normed, data=data, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\__init__.py", line 1867, in inner
    return func(ax, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\axes\_axes.py", line 6815, in hist
    self.autoscale_view()
  File "C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\axes\_base.py", line 2479, in autoscale_view
    if self.get_xscale().lower() == 'log':
TypeError: 'int' object is not callable
>>> time_slices = create_slices(time)
>>> plot_slices(time_slices)
>>> len(time)
27510
>>> time_slices = create_slices(time[20000:])
>>> plot_slices(time_slices)
>>> plt.hist(time, bins=100)
(array([643., 591., 579., 546., 557., 238., 474., 505., 255., 493., 476.,
       500., 462., 474., 436., 430., 413., 418., 410., 396., 400., 401.,
       352., 357., 241., 347., 391., 352., 331., 359., 360., 317., 320.,
       354., 330., 330., 306.,   5.,   0.,   0.,   0.,   0.,   0.,   0.,
       127., 276., 274., 283., 237., 232., 215., 255., 260., 241., 278.,
       243., 267., 254., 216., 234., 240., 249., 224., 246., 239., 239.,
       224., 218., 218., 234., 226., 188., 231., 201., 242., 196., 189.,
       201., 185., 188., 201., 229., 210., 212., 197., 214., 206., 205.,
       223., 224., 213., 193., 222., 185., 212., 188., 200., 184., 182.,
       191.]), array([2.75119125e+06, 3.81979430e+06, 4.88839735e+06, 5.95700039e+06,
       7.02560344e+06, 8.09420649e+06, 9.16280954e+06, 1.02314126e+07,
       1.13000156e+07, 1.23686187e+07, 1.34372217e+07, 1.45058248e+07,
       1.55744278e+07, 1.66430309e+07, 1.77116339e+07, 1.87802370e+07,
       1.98488400e+07, 2.09174431e+07, 2.19860461e+07, 2.30546492e+07,
       2.41232522e+07, 2.51918552e+07, 2.62604583e+07, 2.73290613e+07,
       2.83976644e+07, 2.94662674e+07, 3.05348705e+07, 3.16034735e+07,
       3.26720766e+07, 3.37406796e+07, 3.48092827e+07, 3.58778857e+07,
       3.69464888e+07, 3.80150918e+07, 3.90836949e+07, 4.01522979e+07,
       4.12209010e+07, 4.22895040e+07, 4.33581071e+07, 4.44267101e+07,
       4.54953132e+07, 4.65639162e+07, 4.76325192e+07, 4.87011223e+07,
       4.97697253e+07, 5.08383284e+07, 5.19069314e+07, 5.29755345e+07,
       5.40441375e+07, 5.51127406e+07, 5.61813436e+07, 5.72499467e+07,
       5.83185497e+07, 5.93871528e+07, 6.04557558e+07, 6.15243589e+07,
       6.25929619e+07, 6.36615650e+07, 6.47301680e+07, 6.57987711e+07,
       6.68673741e+07, 6.79359771e+07, 6.90045802e+07, 7.00731832e+07,
       7.11417863e+07, 7.22103893e+07, 7.32789924e+07, 7.43475954e+07,
       7.54161985e+07, 7.64848015e+07, 7.75534046e+07, 7.86220076e+07,
       7.96906107e+07, 8.07592137e+07, 8.18278168e+07, 8.28964198e+07,
       8.39650229e+07, 8.50336259e+07, 8.61022290e+07, 8.71708320e+07,
       8.82394351e+07, 8.93080381e+07, 9.03766411e+07, 9.14452442e+07,
       9.25138472e+07, 9.35824503e+07, 9.46510533e+07, 9.57196564e+07,
       9.67882594e+07, 9.78568625e+07, 9.89254655e+07, 9.99940686e+07,
       1.01062672e+08, 1.02131275e+08, 1.03199878e+08, 1.04268481e+08,
       1.05337084e+08, 1.06405687e+08, 1.07474290e+08, 1.08542893e+08,
       1.09611496e+08]), <a list of 100 Patch objects>)
>>> plt.show()
>>> time_slices = create_slices(time[15000:])
>>> plot_slices(time_slices)
>>> time_slices = create_slices(time[16000:])
>>> plot_slices(time_slices)
>>> time_slices.shape
Traceback (most recent call last):
  File "<pyshell#14>", line 1, in <module>
    time_slices.shape
AttributeError: 'list' object has no attribute 'shape'
>>> len(time_slices)
10
>>> len(time_slices[0])
1151
>>> plt.hist(time_slices[0])
(array([127., 135., 122., 121., 112., 107., 108., 109., 109., 101.]), array([5.36603760e+07, 5.92490096e+07, 6.48376432e+07, 7.04262768e+07,
       7.60149104e+07, 8.16035440e+07, 8.71921776e+07, 9.27808112e+07,
       9.83694448e+07, 1.03958078e+08, 1.09546712e+08]), <a list of 10 Patch objects>)
>>> plt.show()
>>> [popt, pcov] = fit_exponential(time_slices[0], [120, .00001])

Warning (from warnings module):
  File "C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\minpack.py", line 794
    category=OptimizeWarning)
OptimizeWarning: Covariance of the parameters could not be estimated
>>> [popt, pcov] = fit_exponential(time_slices[0], [120, .0000000297])
>>> poopt
Traceback (most recent call last):
  File "<pyshell#21>", line 1, in <module>
    poopt
NameError: name 'poopt' is not defined
>>> popt
array([1.73843858e+01, 5.07723393e-09])
>>> plt.show()
>>> [popt, pcov] = fit_exponential(time_slices[1], [120, .0000000297])
>>> plt.show()
>>> popt
array([1.73738196e+01, 5.06953689e-09])
>>> plt.hist(energy, bins=100)
(array([ 610.,  576.,  595.,  530.,  586.,  637.,  818.,  486.,  366.,
        271.,  388.,  297.,  287.,  238.,  283.,  301.,  236.,  244.,
        246.,  251.,  214.,  262.,  201.,  204.,  205.,  207.,  200.,
        199.,  202.,  179.,  193.,  164.,  172.,  156.,  178.,  157.,
        208.,  254.,  204.,  159.,  145.,  167.,  152.,  155.,  160.,
        206.,  190.,  189.,  135.,  184.,  223.,  250.,  183.,  119.,
        157.,  177.,  173.,  144.,  129.,   82.,  120.,  109.,  122.,
        127.,  104.,  120.,  107.,  109.,  112.,  117.,  220.,  481.,
        780.,  703.,  324.,  138.,   95.,  105.,  178.,  369.,  305.,
        124.,  126.,  269., 1051., 2124., 1862.,  450.,  122.,  101.,
        100.,  123.,  124.,   85.,   81.,   83.,   88.,  109.,   81.,
         78.]), array([ 0.50017  ,  0.6151383,  0.7301066,  0.8450749,  0.9600432,
        1.0750115,  1.1899798,  1.3049481,  1.4199164,  1.5348847,
        1.649853 ,  1.7648213,  1.8797896,  1.9947579,  2.1097262,
        2.2246945,  2.3396628,  2.4546311,  2.5695994,  2.6845677,
        2.799536 ,  2.9145043,  3.0294726,  3.1444409,  3.2594092,
        3.3743775,  3.4893458,  3.6043141,  3.7192824,  3.8342507,
        3.949219 ,  4.0641873,  4.1791556,  4.2941239,  4.4090922,
        4.5240605,  4.6390288,  4.7539971,  4.8689654,  4.9839337,
        5.098902 ,  5.2138703,  5.3288386,  5.4438069,  5.5587752,
        5.6737435,  5.7887118,  5.9036801,  6.0186484,  6.1336167,
        6.248585 ,  6.3635533,  6.4785216,  6.5934899,  6.7084582,
        6.8234265,  6.9383948,  7.0533631,  7.1683314,  7.2832997,
        7.398268 ,  7.5132363,  7.6282046,  7.7431729,  7.8581412,
        7.9731095,  8.0880778,  8.2030461,  8.3180144,  8.4329827,
        8.547951 ,  8.6629193,  8.7778876,  8.8928559,  9.0078242,
        9.1227925,  9.2377608,  9.3527291,  9.4676974,  9.5826657,
        9.697634 ,  9.8126023,  9.9275706, 10.0425389, 10.1575072,
       10.2724755, 10.3874438, 10.5024121, 10.6173804, 10.7323487,
       10.847317 , 10.9622853, 11.0772536, 11.1922219, 11.3071902,
       11.4221585, 11.5371268, 11.6520951, 11.7670634, 11.8820317,
       11.997    ]), <a list of 100 Patch objects>)
>>> plt.show()
>>> [popt, pcov] = fit_exponential(time_slices[8], [120, .0000000297])
>>> popt
array([1.74289946e+01, 5.10582775e-09])
>>> plt.show()
>>> 
======= RESTART: C:\Users\Ryan\Documents\AdvLab\Round 3\slice_tools.py =======
>>> plt.hist(energy, bins=100)
(array([ 610.,  576.,  595.,  530.,  586.,  637.,  818.,  486.,  366.,
        271.,  388.,  297.,  287.,  238.,  283.,  301.,  236.,  244.,
        246.,  251.,  214.,  262.,  201.,  204.,  205.,  207.,  200.,
        199.,  202.,  179.,  193.,  164.,  172.,  156.,  178.,  157.,
        208.,  254.,  204.,  159.,  145.,  167.,  152.,  155.,  160.,
        206.,  190.,  189.,  135.,  184.,  223.,  250.,  183.,  119.,
        157.,  177.,  173.,  144.,  129.,   82.,  120.,  109.,  122.,
        127.,  104.,  120.,  107.,  109.,  112.,  117.,  220.,  481.,
        780.,  703.,  324.,  138.,   95.,  105.,  178.,  369.,  305.,
        124.,  126.,  269., 1051., 2124., 1862.,  450.,  122.,  101.,
        100.,  123.,  124.,   85.,   81.,   83.,   88.,  109.,   81.,
         78.]), array([ 0.50017  ,  0.6151383,  0.7301066,  0.8450749,  0.9600432,
        1.0750115,  1.1899798,  1.3049481,  1.4199164,  1.5348847,
        1.649853 ,  1.7648213,  1.8797896,  1.9947579,  2.1097262,
        2.2246945,  2.3396628,  2.4546311,  2.5695994,  2.6845677,
        2.799536 ,  2.9145043,  3.0294726,  3.1444409,  3.2594092,
        3.3743775,  3.4893458,  3.6043141,  3.7192824,  3.8342507,
        3.949219 ,  4.0641873,  4.1791556,  4.2941239,  4.4090922,
        4.5240605,  4.6390288,  4.7539971,  4.8689654,  4.9839337,
        5.098902 ,  5.2138703,  5.3288386,  5.4438069,  5.5587752,
        5.6737435,  5.7887118,  5.9036801,  6.0186484,  6.1336167,
        6.248585 ,  6.3635533,  6.4785216,  6.5934899,  6.7084582,
        6.8234265,  6.9383948,  7.0533631,  7.1683314,  7.2832997,
        7.398268 ,  7.5132363,  7.6282046,  7.7431729,  7.8581412,
        7.9731095,  8.0880778,  8.2030461,  8.3180144,  8.4329827,
        8.547951 ,  8.6629193,  8.7778876,  8.8928559,  9.0078242,
        9.1227925,  9.2377608,  9.3527291,  9.4676974,  9.5826657,
        9.697634 ,  9.8126023,  9.9275706, 10.0425389, 10.1575072,
       10.2724755, 10.3874438, 10.5024121, 10.6173804, 10.7323487,
       10.847317 , 10.9622853, 11.0772536, 11.1922219, 11.3071902,
       11.4221585, 11.5371268, 11.6520951, 11.7670634, 11.8820317,
       11.997    ]), <a list of 100 Patch objects>)
>>> plt.show()
>>> time_slice = slice_at_energy(time, energy, 10.3)
>>> plt.hist(time_slice, bins=100)
(array([210., 183., 179., 164., 169.,  64., 148., 124.,  75., 142., 114.,
       127., 128., 120., 115., 105., 117., 101., 101.,  99.,  88.,  91.,
        86.,  84.,  54.,  76.,  89.,  88.,  72.,  65.,  85.,  67.,  58.,
        83.,  67.,  66.,  51.,   2.,   0.,   0.,   0.,   0.,   0.,   0.,
        24.,  57.,  49.,  54.,  39.,  37.,  36.,  33.,  43.,  36.,  43.,
        34.,  42.,  31.,  26.,  28.,  28.,  27.,  34.,  33.,  23.,  23.,
        22.,  18.,  25.,  14.,  23.,  21.,  24.,  19.,  21.,  25.,   8.,
        19.,  13.,  17.,  10.,  16.,  17.,  16.,  18.,  18.,  17.,  19.,
        14.,  15.,  10.,  10.,  11.,  10.,  15.,  21.,  11.,  11.,   8.,
         8.]), array([2.76012725e+06, 3.82775150e+06, 4.89537575e+06, 5.96299999e+06,
       7.03062424e+06, 8.09824849e+06, 9.16587273e+06, 1.02334970e+07,
       1.13011212e+07, 1.23687455e+07, 1.34363697e+07, 1.45039940e+07,
       1.55716182e+07, 1.66392425e+07, 1.77068667e+07, 1.87744910e+07,
       1.98421152e+07, 2.09097395e+07, 2.19773637e+07, 2.30449880e+07,
       2.41126122e+07, 2.51802364e+07, 2.62478607e+07, 2.73154849e+07,
       2.83831092e+07, 2.94507334e+07, 3.05183577e+07, 3.15859819e+07,
       3.26536062e+07, 3.37212304e+07, 3.47888547e+07, 3.58564789e+07,
       3.69241032e+07, 3.79917274e+07, 3.90593517e+07, 4.01269759e+07,
       4.11946002e+07, 4.22622244e+07, 4.33298487e+07, 4.43974729e+07,
       4.54650972e+07, 4.65327214e+07, 4.76003456e+07, 4.86679699e+07,
       4.97355941e+07, 5.08032184e+07, 5.18708426e+07, 5.29384669e+07,
       5.40060911e+07, 5.50737154e+07, 5.61413396e+07, 5.72089639e+07,
       5.82765881e+07, 5.93442124e+07, 6.04118366e+07, 6.14794609e+07,
       6.25470851e+07, 6.36147094e+07, 6.46823336e+07, 6.57499579e+07,
       6.68175821e+07, 6.78852063e+07, 6.89528306e+07, 7.00204548e+07,
       7.10880791e+07, 7.21557033e+07, 7.32233276e+07, 7.42909518e+07,
       7.53585761e+07, 7.64262003e+07, 7.74938246e+07, 7.85614488e+07,
       7.96290731e+07, 8.06966973e+07, 8.17643216e+07, 8.28319458e+07,
       8.38995701e+07, 8.49671943e+07, 8.60348186e+07, 8.71024428e+07,
       8.81700671e+07, 8.92376913e+07, 9.03053155e+07, 9.13729398e+07,
       9.24405640e+07, 9.35081883e+07, 9.45758125e+07, 9.56434368e+07,
       9.67110610e+07, 9.77786853e+07, 9.88463095e+07, 9.99139338e+07,
       1.00981558e+08, 1.02049182e+08, 1.03116807e+08, 1.04184431e+08,
       1.05252055e+08, 1.06319679e+08, 1.07387304e+08, 1.08454928e+08,
       1.09522552e+08]), <a list of 100 Patch objects>)
>>> plt.show()
>>> [popt, pcov] = fit_exponential(time_slice, [170, .0000000279])
>>> plt.show()
>>> popt
array([1.96277243e+02, 3.15908681e-08])
>>> plt.show()
>>> [popt, pcov] = fit_exponential(time_slice, [170, .0000000279])

>>> plt.show()
>>> plt.hist(energy, bins=100)
(array([ 610.,  576.,  595.,  530.,  586.,  637.,  818.,  486.,  366.,
        271.,  388.,  297.,  287.,  238.,  283.,  301.,  236.,  244.,
        246.,  251.,  214.,  262.,  201.,  204.,  205.,  207.,  200.,
        199.,  202.,  179.,  193.,  164.,  172.,  156.,  178.,  157.,
        208.,  254.,  204.,  159.,  145.,  167.,  152.,  155.,  160.,
        206.,  190.,  189.,  135.,  184.,  223.,  250.,  183.,  119.,
        157.,  177.,  173.,  144.,  129.,   82.,  120.,  109.,  122.,
        127.,  104.,  120.,  107.,  109.,  112.,  117.,  220.,  481.,
        780.,  703.,  324.,  138.,   95.,  105.,  178.,  369.,  305.,
        124.,  126.,  269., 1051., 2124., 1862.,  450.,  122.,  101.,
        100.,  123.,  124.,   85.,   81.,   83.,   88.,  109.,   81.,
         78.]), array([ 0.50017  ,  0.6151383,  0.7301066,  0.8450749,  0.9600432,
        1.0750115,  1.1899798,  1.3049481,  1.4199164,  1.5348847,
        1.649853 ,  1.7648213,  1.8797896,  1.9947579,  2.1097262,
        2.2246945,  2.3396628,  2.4546311,  2.5695994,  2.6845677,
        2.799536 ,  2.9145043,  3.0294726,  3.1444409,  3.2594092,
        3.3743775,  3.4893458,  3.6043141,  3.7192824,  3.8342507,
        3.949219 ,  4.0641873,  4.1791556,  4.2941239,  4.4090922,
        4.5240605,  4.6390288,  4.7539971,  4.8689654,  4.9839337,
        5.098902 ,  5.2138703,  5.3288386,  5.4438069,  5.5587752,
        5.6737435,  5.7887118,  5.9036801,  6.0186484,  6.1336167,
        6.248585 ,  6.3635533,  6.4785216,  6.5934899,  6.7084582,
        6.8234265,  6.9383948,  7.0533631,  7.1683314,  7.2832997,
        7.398268 ,  7.5132363,  7.6282046,  7.7431729,  7.8581412,
        7.9731095,  8.0880778,  8.2030461,  8.3180144,  8.4329827,
        8.547951 ,  8.6629193,  8.7778876,  8.8928559,  9.0078242,
        9.1227925,  9.2377608,  9.3527291,  9.4676974,  9.5826657,
        9.697634 ,  9.8126023,  9.9275706, 10.0425389, 10.1575072,
       10.2724755, 10.3874438, 10.5024121, 10.6173804, 10.7323487,
       10.847317 , 10.9622853, 11.0772536, 11.1922219, 11.3071902,
       11.4221585, 11.5371268, 11.6520951, 11.7670634, 11.8820317,
       11.997    ]), <a list of 100 Patch objects>)
>>> plt.show()
>>> time_slice2 = slice_at_energy(time, energy, 9.6)
>>> time_slice3 = slice_at_energy(time, energy, 8.9)
>>> [popt2, pcov2] = fit_exponential(time_slice2, [170, .0000000279])
>>> plt.show()
>>> [popt3, pcov3] = fit_exponential(time_slice3, [170, .0000000279])
>>> plt.show()
>>> print(popt, popt2, popt3)
[1.96277243e+02 3.15908681e-08] [2.30014791e+01 2.07271952e-08] [8.11837798e+01 3.15393151e-08]
>>> 
